import os
import shutil

def extract_cpp_c_files(input_dir, output_dir):
    if not os.path.exists(input_dir):
        print("Input directory does not exist.")
        return

    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # List of file extensions to extract (".c", ".cpp", ".cc")
    valid_extensions = [".c", ".cpp", ".cc"]

    for root, _, files in os.walk(input_dir):
        for file in files:
            _, file_extension = os.path.splitext(file)
            if file_extension in valid_extensions:
                file_path = os.path.join(root, file)
                # Generate the output file path based on the input file's relative path
                rel_path = os.path.relpath(file_path, input_dir)
                output_file = os.path.join(output_dir, rel_path)

                # Create the output directory if it doesn't exist
                os.makedirs(os.path.dirname(output_file), exist_ok=True)

                # Copy the C/C++ file to the output directory
                shutil.copy(file_path, output_file)
                print(f"Extracted: {file_path} -> {output_file}")

if __name__ == "__main__":
    input_directory = "C:/Users/ASUS/PycharmProjects/pythonProject4/Code3/New/tcpdum"
    output_directory = "C:/Users/ASUS/PycharmProjects/pythonProject4/Code3/New/ieee/C"

    extract_cpp_c_files(input_directory, output_directory)
